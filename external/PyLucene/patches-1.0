--- PyLucene-1.0/Makefile	2005-07-24 06:20:22.000000000 -0700
+++ PyLucene-1.0-patched/Makefile	2005-09-20 08:47:18.000000000 -0700
@@ -270,7 +270,7 @@
 PYLUCENE_CP:=`cygpath -awp $(PYLUCENE_CP)`
 else
 DB_SRCS=`find $(DB)/java/src/com/sleepycat/db -name '*.java'`
-DB_INC=-I$(PREFIX_DB)/include -I$(DB) -I$(DB)/build_unix
+DB_INC=-I$(PREFIX_DB)/include -I$(DB) -I$(DB)/$(BUILD_DB)
 endif
 
 STORE_SRCS=`find store-$(LUCENE_VER) -name '*.java' -print`
@@ -327,7 +327,7 @@
 else
 DB_SRCS=`find $(DB)/java/src/com/sleepycat/db -regex '.*/db/[^/]*java'`
 DB_CONST=$(DB)/java/src/com/sleepycat/db/$(BINDIR)/DbConstants.java
-DB_INC=-I$(PREFIX_DB)/include -I$(DB) -I$(DB)/build_unix
+DB_INC=-I$(PREFIX_DB)/include -I$(DB) -I$(DB)/$(BUILD_DB)
 endif
 
 STORE_SRCS=`find store-$(LUCENE_VER) -name '*.java' -print`
@@ -868,13 +868,19 @@
 	mkdir -p $(PREFIX_DB)/lib
 	install $(LIBDB_JAVA_LIB) $(PREFIX_DB)/lib
 endif
+	install $(GCJ_HOME)/lib/libgcj.so.$(LIBGCJ_VER) $(PREFIX)/lib
+	install $(GCJ_HOME)/lib/libstdc++.so.6 $(PREFIX)/lib
+	install $(GCJ_HOME)/lib/libgcc_s.so.1 $(PREFIX)/lib
+	strip $(PREFIX)/lib/libgcj.so.$(LIBGCJ_VER)
+	strip $(PREFIX)/lib/libstdc++.so.6
 else
 
 ifeq ($(OS),Cygwin)
 install::
 	install $(GCJ_HOME)/bin/libiconv-2.dll $(PYTHON_SITE)
 ifdef DB
-	install $(LIBDB_JAVA_LIB) $(PREFIX_DB)/build_win32/$(BINDIR)
+	mkdir -p $(PREFIX)/bin
+	install $(LIBDB_JAVA_LIB) $(PREFIX)/bin
 endif
 endif
 endif
--- PyLucene-1.0-orig/PyLucene.i	2005-05-01 17:19:13.000000000 -0700
+++ PyLucene-1.0/PyLucene.i	2005-11-07 18:44:34.000000000 -0800
@@ -4347,32 +4347,67 @@
     java::util::Hashtable *props = (java::util::Hashtable *)
         java::lang::System::getProperties();
 
     props->put(JvNewStringUTF("pythonRefs"), pythonRefs);
     pythonRefs->put(one, one);
 
     PyObject *sys = PyImport_ImportModule("sys");
     PyObject *path = PyObject_GetAttrString(sys, "path");
-    int count = PyList_Size(path);
 
-    while (count-- > 0) {
-        PyObject *pp = PyList_GET_ITEM(path, count);
-        char *p = PyString_AsString(pp);
-        int l = strlen(p);
-
-        if (l > 13 && !strcmp(p + l - 13, "site-packages"))
-        {
-            jstring jp = JvNewStringUTF(p);
-            props->put(JvNewStringUTF("gnu.classpath.home.url"),
-                       JvNewStringUTF("file:")->concat(jp->replace('\\','/')));
-            break;
+    if (path)
+    {
+        int count = PyList_Size(path);
+
+        while (count-- > 0) {
+            PyObject *pp = PyList_GET_ITEM(path, count);
+            PyObject *unicode_pp =
+                PyString_AsDecodedObject(pp, Py_FileSystemDefaultEncoding,
+                                         "strict");
+            PyObject *utf8_pp;
+
+            if (!unicode_pp)
+            {
+                PyErr_Clear();
+                break;
+            }
+
+            utf8_pp = PyUnicode_AsUTF8String(unicode_pp);
+            Py_DECREF(unicode_pp);
+
+            if (!utf8_pp)
+            {
+                PyErr_Clear();
+                break;
+            }
+            if (!PyString_CheckExact(utf8_pp))
+            {
+                Py_DECREF(utf8_pp);
+                PyErr_Clear();
+                break;
+            }
+            char *p = PyString_AS_STRING(utf8_pp);
+            int l = strlen(p);
+
+            if (l > 13 && !strcmp(p + l - 13, "site-packages"))
+            {
+                jstring jp = JvNewStringUTF(p);
+
+                if (jp)
+                    props->put(JvNewStringUTF("gnu.classpath.home.url"),
+                               JvNewStringUTF("file:")->concat(jp->replace('\\','/')));
+                Py_DECREF(utf8_pp);
+                break;
+            }
+
+            Py_DECREF(utf8_pp);
         }
+
+        Py_DECREF(path);
     }
-    Py_DECREF(path);
     Py_DECREF(sys);
 
     JvInitClass(&java::util::Locale::class$);
     JvInitClass(&org::apache::lucene::analysis::StopAnalyzer::class$);
     JvInitClass(&org::apache::lucene::document::Field::class$);
     JvInitClass(&org::apache::lucene::document::DateField::class$);
     JvInitClass(&org::apache::lucene::queryParser::QueryParser::class$);
     JvInitClass(&org::apache::lucene::queryParser::MultiFieldQueryParser::class$);
